1) Множество (multiset) используется, когда нужно хранить данные отсортированные данные, не упуская каждое
вхождение во множество, недели чем у set. Аналогично и отображения (multimap) могут хранить в себе отсортированные
по ключу данные, не упуская вхождния в выборку)

2) Хеш функция должна быть детерминированная (при одном и том же значении выдавать один и тот же хеш)
Быстрая в вычисления (очв)
Односторонность (по значению можно вычислить хеш, а вот вычислить значение по хэшу практически невозомжно)
Стоякость к коллизиям (меньше различных данных должны иметь один и тот же хеш)

3) Так как память у компьютера не безгранична, а набор данных может превышать память компьютера в несколько раз,
из некоторых данных получется один и тот же хеш - коллизия. Борьба с коллизиями:
a) Пробегаемся по std::forward_list. Если такого хеша еще нет, то заполняем последнюю ячейку (метод цепочек). Если
б) Если хэш совпал, то ищется первая свободная ячейка, в которую можно записать элемент

4) В худшем случае, когда все хэши совпали, временная сложность увеличивается до O(n) (перебераем весь массив данного хэша)
