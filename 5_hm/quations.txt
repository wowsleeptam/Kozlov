1) Такое количество членов-фукний связано с тем, что существуют разные кодировки символов, которем занимают разные участки памяти
Поэтому чтобы работать с разными данными, кодировками, нужно использовать разные фукнции-члены

2)Заголовочный файл <locale> состоит из следующих частей. Во-первых, локализация собирает все поддерживаемые в C++ особенности локализованного поведения и предоставляем им 'точки выхода'. Во-вторых, самыми маленькими элементами локализации
называемые фасетами (facets). Примером фасета является, например, класс time_put, предназначенный для записи даты в поток. В-третьих, каждый фасет принадлежит к некоторой категории,
которая объединяет связанные фасеты в одну группу.


3)В широких кодировках символ всегла представляется постоянным количество байтов(utf-32). Многобайтовые кодировки же
имеют переменную длину, и могут изменяться свой размер в зависимости от введенных данных (utf-8 and utf-16)


4) Unicode содержит в себе практически все буквы и спец. символы. Его можно разделить на 3 зоны: основная зона - где находтися таблица ASCII и другие важные символы

Служебная зона - позиции Unicode, которые не могу быть использлованы. Это связано с особенностью UTF-16 кодировки

Дополнительная секция - для использования письменности других языков и много другого

Также в unicode имеются оргомное количество незаполненых ячеек


5) Регулярки удобно использовать для поиска шаблона в строке. Допустим, нужно найти email. Он обладает каким-то своим шаблоном. Поэтому
удобно искать email с использованием регулярок
